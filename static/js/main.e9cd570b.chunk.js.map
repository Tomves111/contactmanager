{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/test/Test.js","components/pages/NotFound.js","components/contacts/Addcontact1.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","then","res","data","value","this","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","htmlFor","defaultProps","EditContact","onSubmit","e","a","preventDefault","updContact","match","params","put","history","push","target","Header","branding","href","Test","title","body","fetch","response","json","NotFound","Addcontact","uuid","App","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9cd570b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios'\r\n\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts: state.contacts.filter(contact => \r\n                contact.id !== action.payload\r\n                )\r\n        };\r\n        case 'ADD_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts: [action.payload, ...state.contacts]\r\n            \r\n        };\r\n        case 'UPDATE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts: state.contacts.map\r\n            // eslint-disable-next-line no-unexpected-multiline\r\n            (contact => contact.id === action.payload.id ? (contact=action.payload): contact)\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => \r\n                reducer(state, action))\r\n        };\r\n\r\n    componentDidMount(){\r\n        axios.get('https://jsonplaceholder.typicode.com/users')\r\n        .then(res => this.setState({\r\n            contacts: res.data \r\n        }));\r\n    }\r\n    render() {\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { Consumer } from '../../context'\r\nimport axios from 'axios'\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: true\r\n    };\r\n\r\n    onDeleteClick = (id, dispatch) => {\r\n        axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        .then(res => dispatch({type: 'DELETE_CONTACT', payload: id}));\r\n    };\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n<div className=\"card card-body mb-3\">\r\n                <h4>{name} {''} <i \r\n                onClick={() => \r\n                    this.setState({\r\n                        showContactInfo: \r\n                        ! this.state.showContactInfo\r\n                    })\r\n                }\r\n            \r\n                className=\"fas fa-sort-down\"\r\n                style={{ cursor: 'pointer' }}></i> \r\n                <i className=\"fas fa-times\"\r\n                style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n                <Link to={`contact/edit/${id}`}>\r\n                <i className=\"fas fa-pencil-alt\"\r\n                style={{ cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem' }}\r\n                ></i>\r\n                </Link>\r\n                </h4> \r\n                {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email: {email}</li>\r\n                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n                ) : null}\r\n            </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n    \r\n};\r\n\r\nexport default Contact","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../../context'\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return(\r\n                <React.Fragment>\r\n                <h1 className=\"display-4 mb-2\">\r\n                    <span\r\n                    className=\"text-danger\">Contact</span>\r\n                    List\r\n                </h1>\r\n\r\n                {contacts.map(contact => (\r\n                <Contact \r\n                key={contact.id} \r\n                contact={contact} \r\n                />)) }\r\n            </React.Fragment>\r\n                    ) \r\n            }  }\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\nconst TextInputGroup = ({\r\n    label, \r\n    name,\r\n    value, \r\n    placeholder,\r\n    type,\r\n    onChange\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n                                <label htmlFor={name}>{label}</label>\r\n                                <input \r\n                                 type={type} \r\n                                 name={name}\r\n                                 className=\"form-control form-control-lg\" \r\n                                 placeholder={placeholder}\r\n                                 value={value}\r\n                                 onChange={onChange}>\r\n    \r\n                                </input>\r\n                            </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios'\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`\r\n        );\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name, \r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n       const { name, email, phone } = this.state;\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n       const {id} = this.props.match.params;\r\n       const res = await axios.put(\r\n           `https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n       dispatch({\r\n        type: 'UPDATE_CONTACT', payload: res.data\r\n       });\r\n    \r\n        //clean state\r\n       this.setState({\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n       });\r\n       this.props.history.push('/');\r\n    };\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value});\r\n   \r\n    render() {\r\n        const { name, email, phone } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n             {value => {\r\n                 const { dispatch } = value;\r\n                 return (\r\n                    <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">Edit Contact</div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                           <TextInputGroup \r\n                           label=\"Name\"\r\n                           name=\"name\"\r\n                           placeholder=\"Enter name\"\r\n                           value={name}\r\n                           onChange={this.onChange}\r\n                           />\r\n                         <TextInputGroup \r\n                           label=\"Email\"\r\n                           name=\"email\"\r\n                           placeholder=\"Enter email\"\r\n                           value={email}\r\n                           onChange={this.onChange}\r\n                           />\r\n                         <TextInputGroup \r\n                           label=\"Phone\"\r\n                           name=\"phone\"\r\n                           placeholder=\"Enter phone\"\r\n                           value={phone}\r\n                           onChange={this.onChange}\r\n                           />\r\n                            <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-block\">\r\n    \r\n                            </input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                 )\r\n             }}   \r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default EditContact;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = props => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm\r\n        navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n            <a href=\"/\" className=\"navbar-brand\">\r\n                {branding}\r\n            </a>\r\n            <div>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\">\r\n                        <i className=\"fas fa-home\"></i>Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/contact/AddContact\" className=\"nav-link\">\r\n                            <i className=\"fas fa-plus\"></i>Add\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/about\" className=\"nav-link\">\r\n                        <i className=\"fas fa-question\"></i>About\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            <h1>About Contact Manager</h1>\r\n            <p>Simple app for manage contact</p>\r\n            <p>App version: 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state = {\r\n     title: '',\r\n     body: ''\r\n    };\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n           title: data.title,\r\n           body: data.body\r\n        })\r\n    )\r\n    }\r\n\r\n    render() {\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Test;\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">404 Page not found</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport uuid from 'uuid'\r\n\r\nclass Addcontact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    }\r\n\r\n    onSubmit = (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n       const { name, email, phone } = this.state;\r\n\r\n       const newContact = {\r\n           id: uuid(),\r\n           name,\r\n           email,\r\n           phone\r\n        }\r\n\r\n       dispatch({type: 'ADD_CONTACT', payload: newContact});\r\n        //clean state\r\n       this.setState({\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n       });\r\n       this.props.history.push('/');\r\n    };\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value});\r\n   \r\n    render() {\r\n        const { name, email, phone } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n             {value => {\r\n                 const { dispatch } = value;\r\n                 return (\r\n                    <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">Add Contact</div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                           <TextInputGroup \r\n                           label=\"Name\"\r\n                           name=\"name\"\r\n                           placeholder=\"Enter name\"\r\n                           value={name}\r\n                           onChange={this.onChange}\r\n                           />\r\n                         <TextInputGroup \r\n                           label=\"Email\"\r\n                           name=\"email\"\r\n                           placeholder=\"Enter email\"\r\n                           value={email}\r\n                           onChange={this.onChange}\r\n                           />\r\n                         <TextInputGroup \r\n                           label=\"Phone\"\r\n                           name=\"phone\"\r\n                           placeholder=\"Enter phone\"\r\n                           value={phone}\r\n                           onChange={this.onChange}\r\n                           />\r\n                            <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block\">\r\n    \r\n                            </input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                 )\r\n             }}   \r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default Addcontact;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport EditContact from './components/contacts/EditContact'\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport Test from './components/test/Test';\nimport NotFound from './components/pages/NotFound';\nimport Addcontact from './components/contacts/Addcontact1';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Provider } from './context'\n\nclass App extends Component {\n  render(){\n  return(\n    <Provider>\n      <Router>\n    <div className=\"App\">\n      <Header branding=\"Contact manager\"/>\n    <div className=\"Container\">\n      <Switch>\n    <Route exact path = \"/\" component = { Contacts } />\n    <Route exact path = \"/about\" component = { About } />\n    <Route exact path = \"/contact/AddContact\" component = { Addcontact } />\n    <Route exact path = \"/contact/edit/:id\" component = { EditContact } />\n    <Route exact path = \"/test\" component = { Test } />\n    <Route component={NotFound} />\n      </Switch>\n</div>\n    </div>\n    </Router>\n    </Provider>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}